import { CPU } from "./CPU.js";
import { CardStackBuilder } from "./CardStackBuilder.js";
import { j136e } from "./J136E-Modified.js";
import { OP } from "./OP.js";

const builder = new CardStackBuilder();
builder.addCardString('J136E001        $              1076')
builder.addCardString('J136E002        P              1064')
builder.addCardString('J136E003        T                 6')
builder.addCardString('J136E001        $              1000')
builder.addCardString('J136E004     1000 100    0 010 *  9     LINK TO BEGINNING OF LOADER.')
builder.addCardString('J136E005     1001 100    0 004    5     J135A AS IT EXISTS IN STORAGE.')
builder.addCardString('J136E006     1002 101    3 014    3')
builder.addCardString('J136E007     1003')
builder.addCardString('J136E008     1004 075   79 002    2')
builder.addCardString('J136E009     1005 010    1 000,4000')
builder.addCardString('J136E010     1006                       TEMPORARY')
builder.addCardString('J136E011     1007                       TEMPORARY')
builder.addCardString('J136E012     1008                       TEMPORARY')
builder.addCardString('J136E013     1009                       TEMPORARY')
builder.addCardString('J136E014     1010                       BLANK COLUMN INDICATOR')
builder.addCardString('J136E015     1011 100 0000 000 0000     # CELL --- ORIGIN OF DIRECTORY')
builder.addCardString('J136E016     1012                       TEMPORARY COUNTER')
builder.addCardString('J136E017     1013                       IMAGE VALUE 1')
builder.addCardString('J136E018     1014                       IMAGE VALUE 2')
builder.addCardString('J136E019     1015                       IMAGE VALUE 4')
builder.addCardString('J136E020     1016 100 0000 000 0000     CONSTANT')
builder.addCardString('J136E021     1017 100 0000 000 0000     A CELL')
builder.addCardString('J136E022     1018 100 0000 000 0000     B CELL')
builder.addCardString('J136E023     1019 100 0000 000 0000     C CELL')
builder.addCardString('J136E024     1020 100 0000 000 0000     D CELL')
builder.addCardString('J136E025     1021 100 0000 000 0000     E CELL')
builder.addCardString('J136E026     1022 100 0000 000 0000     F CELL')
builder.addCardString('J136E027     1023 100 0000 000 0000     G CELL')
builder.addCardString('J136E028     1024 100 0000 000 0000     H CELL')
builder.addCardString('J136E029     1025 100 0000 000 0000     I CELL')
builder.addCardString('J136E030     1026 000 0001 000 0000     CONSTANT')
builder.addCardString('J136E031     1027 130    . 134    .     . CELL --- LINK TO BEGINNING OF PROGRAM')
builder.addCardString('J136E032     1028 000    0 020 P 11     DUMMY')
builder.addCardString('J136E033     1029                       IMAGE VALUE 8')
builder.addCardString('J136E034     1030                       IMAGE VALUE 16')
builder.addCardString('J136E035     1031                       IMAGE VALUE 32')
builder.addCardString('J136E036     1032               544     CONSTANT    - CELL')
builder.addCardString('J136E037     1033 100 0000 000 0000     J CELL')
builder.addCardString('J136E038     1034 100 0000 000 0000     K CELL')
builder.addCardString('J136E039     1035 100 0000 000 0000     L CELL')
builder.addCardString('J136E040     1036 100 0000 000 0000     M CELL')
builder.addCardString('J136E041     1037 100 0000 000 0000     N CELL')
builder.addCardString('J136E042     1038 100 0000 000 0000     O CELL')
builder.addCardString('J136E043     1039 100 0000 000 0000     P CELL')
builder.addCardString('J136E044     1040 100 0000 000 0000     Q CELL')
builder.addCardString('J136E045     1041 100 0000 000 0000     R CELL')
builder.addCardString('J136E046     1042                       TRANSLATOR')
builder.addCardString('J136E047     1043 100 0000 000 0000     $ CELL --- COUNTER')
builder.addCardString('J136E048     1044               400     * CELL --- ORIGIN OF SYMBOL TABLE')
builder.addCardString('J136E049     1045               100     NUMBER OF SYMBOLS PERMITTED')
builder.addCardString('J136E050     1046               245     ORIGIN OF FORWARD REFERENCE TABLE.')
builder.addCardString('J136E051     1047               155     NUMBER OF FORWARD REFERENCES PERMITTED.')
builder.addCardString('J136E052     1048                 8     CONSTANT')
builder.addCardString('J136E053     1049 000    0 020 P  1     DUMMY')
builder.addCardString('J136E054     1050 100 0000 000 0000     S CELL')
builder.addCardString('J136E055     1051 100 0000 000 0000     T CELL')
builder.addCardString('J136E056     1052 100 0000 000 0000     U CELL')
builder.addCardString('J136E057     1053 100 0000 000 0000     V CELL')
builder.addCardString('J136E058     1054 100 0000 000 0000     W CELL')
builder.addCardString('J136E059     1055 100 0000 000 0000     X CELL')
builder.addCardString('J136E060     1056 100 0000 000 0000     Y CELL')
builder.addCardString('J136E061     1057 100 0000 000 0000     Z CELL')
builder.addCardString('J136E062     1058 174 0000 000 0000     CONSTANT')
builder.addCardString('J136E001        $              1059')
builder.addCardString('J136E063     1059 100    0 010 *  9     , CELL --- LINK TO BEGINNING OF LOADER.')
builder.addCardString('J136E064     1060                       TEMPORARY')
builder.addCardString('J136E065     1061                       WORD BUILDUP CELL')
builder.addCardString('J136E066     1062                       TEMPORARY')
builder.addCardString('J136E067     1063                       CURRENT POSITION IN FWD REF TABLE.')
builder.addCardString('J136E068     P  0&           1   39     POWERS OF TEN')
builder.addCardString('J136E069     P  1&          10   39')
builder.addCardString('J136E070     P  2&         100   39')
builder.addCardString('J136E071     P  3&        1000   39')
builder.addCardString('J136E072     P  4&       10000   39')
builder.addCardString('J136E073     P  5&      100000   39')
builder.addCardString('J136E074     P  6&     1000000   39')
builder.addCardString('J136E075     P  7&    10000000   39')
builder.addCardString('J136E076     P  8&   100000000   39')
builder.addCardString('J136E077     P  9&  1000000000   39')
builder.addCardString('J136E078     P 10& 10000000000   39')
builder.addCardString('J136E079     P 11&100000000000   39')
builder.addCardString('J136E001        $              1076')
builder.addCardString('J136E080     *  9 020   46 050   63     PRESET POSITION IN FWD REF TABLE.')
builder.addCardString('J136E081     *  1 101 T  0 101 T  1     COPY, ENCODE AND EDIT IMAGE.')
builder.addCardString('J136E082          004 T  0 020 T  1')
builder.addCardString('J136E083          075   12 064   29')
builder.addCardString('J136E084          060   13 101 T  0')
builder.addCardString('J136E085          101 T  1 004 T  0')
builder.addCardString('J136E086          020 T  1 075   12')
builder.addCardString('J136E087          064   14 020   13')
builder.addCardString('J136E088          064   13 101 T  0')
builder.addCardString('J136E089          101 T  1 004 T  0')
builder.addCardString('J136E090          020 T  1 075   12')
builder.addCardString('J136E091          024   14 064   15')
builder.addCardString('J136E092          020   13 064   13')
builder.addCardString('J136E093          101 T  0 101 T  1')
builder.addCardString('J136E094          004 T  0 020 T  1')
builder.addCardString('J136E095          075   12 024   14')
builder.addCardString('J136E096          064   14 020   13')
builder.addCardString('J136E097          064   13 101 T  1')
builder.addCardString('J136E098          101 T  0 020 T  1')
builder.addCardString('J136E099          004 T  0 075   12')
builder.addCardString('J136E100          024   13 050   13')
builder.addCardString('J136E101          021 P  0 125   13')
builder.addCardString('J136E102          125   14 125   15')
builder.addCardString('J136E103          125   29 050 T  4')
builder.addCardString('J136E104          060 T  2 125 T  4')
builder.addCardString('J136E105          050   30 101 T  0')
builder.addCardString('J136E106          101 T  1 020 T  0')
builder.addCardString('J136E107          004 T  1 075   12')
builder.addCardString('J136E108          024   30 050   31')
builder.addCardString('J136E109          020   30 064   30')
builder.addCardString('J136E110          020 T  4 125 T  2')
builder.addCardString('J136E111          125   30 125   31')
builder.addCardString('J136E112          050 T  4 071   23')
builder.addCardString('J136E113          002 *  2 100    0     IF C36 IS BLANK, THEN READ NEXT CARD.')
builder.addCardString('J136E114     *  2 020 $  0 010 * 20     CONVERT LOCATION.')
builder.addCardString('J136E115          010 *  3 060 T  0')
builder.addCardString('J136E116          056 * 10 056 * 11     SYMBOLIC LOCATION ROUTINE.')
builder.addCardString('J136E117     * 10 004    $ 020 ----')
builder.addCardString('J136E118     * 11 006 * 71 060 ----')
builder.addCardString('J136E119     *  4 020    $ 024 P  0     ADVANCE COUNTER.')
builder.addCardString('J136E120          050   12 020    $')
builder.addCardString('J136E121          024   42 056 *  8     PREPARE TO STORE WORD.')
builder.addCardString('J136E122     * 71 010 *  5 134 $  0     HALT IF AMBIGUOUS SYMBOLIC LOCATION.')
builder.addCardString('J136E123     *  3 020 T  4 002 * 12')
builder.addCardString('J136E124          025   58 002 *  4     IF BLANK LOCATION GO TO *  4.')
builder.addCardString('J136E125     * 12 020    $ 050   12     RELATIVE OR ABSOLUTE LOCATION.')
builder.addCardString('J136E126          060 T  0 056 *  8     PREPARE TO STORE WORD.')
builder.addCardString('J136E127     *  5 120    0 050   61     CLEAR WORD BUILDUP.')
builder.addCardString('J136E128          020 T  4 071    5')
builder.addCardString('J136E129          002 * 80 020   26     IF C18 IS PUNCHED GO TO DATA ROUTINE.')
builder.addCardString('J136E130     *  7 050   62 020 T  4     SET ALTERNATOR.')
builder.addCardString('J136E131          071    9 050 T  4     SHIFT BLANK COLUMN INDICATOR.')
builder.addCardString('J136E132          020 $  0 010 * 40     DISCARD SPACE.')
builder.addCardString('J136E133          020 $  0 010 * 40     CONVERT OPERATION.')
builder.addCardString('J136E134          071    6 050 T  1')
builder.addCardString('J136E135          020 $  0 010 * 40')
builder.addCardString('J136E136          071    3 050 T  2')
builder.addCardString('J136E137          020 $  0 010 * 40')
builder.addCardString('J136E138          024 T  1 024 T  2')
builder.addCardString('J136E139          004   61 075   21')
builder.addCardString('J136E140          074    9 064   61')
builder.addCardString('J136E141          020 $  0 010 * 20     CONVERT ADDRESS.')
builder.addCardString('J136E142          010 *  6 060 T  0')
builder.addCardString('J136E143          056 * 13 014 * 13     SYMBOLIC ADDRESS ROUTINE.')
builder.addCardString('J136E144     * 13          020 ----')
builder.addCardString('J136E145          006 *  6 020   63')
builder.addCardString('J136E146          025   46 025   47')
builder.addCardString('J136E147          001 * 15 134 $  0     HALT IF TOO MANY FORWARD REFERENCES.')
builder.addCardString('J136E148     * 15 020   63 056 * 14')
builder.addCardString('J136E149          024 P  0 050   63')
builder.addCardString('J136E150          020   62 024    $')
builder.addCardString('J136E151     * 14 024   42 050 ----     STORE ITEM IN FWD REF TABLE.')
builder.addCardString('J136E152     *  6 060 T  0 056   61     FORM INSTRUCTION.')
builder.addCardString('J136E153          021   62 001 *  7     IF NOT DONE GO TO *  7.')
builder.addCardString('J136E154     * 70 020   12 050    $')
builder.addCardString('J136E155     *  8 020   61 050 ----     STORE WORD.')
builder.addCardString('J136E156          020 T  4 071    5')
builder.addCardString('J136E157          001 *  1 010 $  1     IF C36 IS BLANK GO BACK TO *  1.')
builder.addCardString('J136E158          020 $  0 010 * 40')
builder.addCardString('J136E159     * 64 056 * 16 020   63     SET SWITCH ACCORDING TO C36.')
builder.addCardString('J136E160          025 P  0 056 * 17     SUBSTITUTE FOR FORWARD REFERENCES.')
builder.addCardString('J136E161          050   63 025   46')
builder.addCardString('J136E162     * 17 005 * 18 020 ----')
builder.addCardString('J136E163          005 * 19 056 * 60')
builder.addCardString('J136E164     * 60 056 * 61 020 ----')
builder.addCardString('J136E165          072   21 056 * 62')
builder.addCardString('J136E166     * 62 050 T  0 020 ----')
builder.addCardString('J136E167          002 * 63 134 $  0     HALT IF UNDEFINED SYMBOL IN LEFT ADDR.')
builder.addCardString('J136E168     * 63 056 T  0 020 T  0')
builder.addCardString('J136E169     * 61 077   21 050 ----')
builder.addCardString('J136E170     * 19 014 * 64 056 * 65')
builder.addCardString('J136E171     * 65 056 * 66 020 ----')
builder.addCardString('J136E172          056 * 67 014 * 67')
builder.addCardString('J136E173     * 67 130 $  0 020 ----     HALT IF UNDEFINED SYMBOL IN RIGHT ADDR.')
builder.addCardString('J136E174     * 66 001 * 67 056 ----')
builder.addCardString('J136E175     * 18 014 * 64 004   16')
builder.addCardString('J136E176          020    * 024   45')
builder.addCardString('J136E177     * 69 014 * 68 060 ----')
builder.addCardString('J136E178     * 68 020 T  0 025 P  0')
builder.addCardString('J136E179          056 * 69 050 T  0')
builder.addCardString('J136E180          025    * 006 * 69')
builder.addCardString('J136E181     * 16          010 ----     , OR . BRANCH')
builder.addCardString('J136E182     * 20 024   26 052 * 25     ADDRESS CONVERSION ROUTINE.')
builder.addCardString('J136E183          052 * 26 120    0')
builder.addCardString('J136E184          050 T  1 050 T  3')
builder.addCardString('J136E185          020 $  0 010 * 40     PEEL OFF PREFIX.')
builder.addCardString('J136E186          020 T  4 002 * 27     IF OCTAL GO TO * 27')
builder.addCardString('J136E187          020 P  1 014 * 27')
builder.addCardString('J136E188     * 27 020   48 050 T  2')
builder.addCardString('J136E189          020 $  0 010 * 40     CALL FOR HIGH ORDER CHARACTER')
builder.addCardString('J136E190          056 * 21 025 P  1')
builder.addCardString('J136E191     * 21 001 * 23 020 ----')
builder.addCardString('J136E192          002 * 22 134 $  0     HALT IF UNDEFINED REGION INDICATOR.')
builder.addCardString('J136E193     * 22 050 T  1 010 * 24')
builder.addCardString('J136E194     * 23 060 T  3 010 * 24')
builder.addCardString('J136E195     * 24 020 $  0 010 * 40')
builder.addCardString('J136E196          004 T  2 036 T  3')
builder.addCardString('J136E197          060 T  3 010 * 29')
builder.addCardString('J136E198     * 29 020 $  0 010 * 40')
builder.addCardString('J136E199          004 T  2 036 T  3')
builder.addCardString('J136E200          060 T  3 010 * 30')
builder.addCardString('J136E201     * 30 020 $  0 010 * 40')
builder.addCardString('J136E202          004 T  2 024 T  1')
builder.addCardString('J136E203          036 T  3 020 * 21')
builder.addCardString('J136E204          025 * 28 006 * 26')
builder.addCardString('J136E205     * 26 010 ---- 025 P  0')
builder.addCardString('J136E206     * 25 005 ---- 010 * 26')
builder.addCardString('J136E207     * 28 001 * 23 020    *')
builder.addCardString('J136E208     * 40 024   26 052 * 41     CHARACTER ROUTINE.')
builder.addCardString('J136E209          020   31 071    1')
builder.addCardString('J136E210          050   31 020   30')
builder.addCardString('J136E211          075    1 050   30')
builder.addCardString('J136E212          020   29 075    1')
builder.addCardString('J136E213          050   29 020   15')
builder.addCardString('J136E214          075    1 050   15')
builder.addCardString('J136E215          020   14 075    1')
builder.addCardString('J136E216          050   14 020   13')
builder.addCardString('J136E217          075    1 050   13')
builder.addCardString('J136E218          060 T  0 010 * 41')
builder.addCardString('J136E219     * 41 010 ----              EXIT')
builder.addCardString('J136E220     * 80 071   13 050 T  4     DATA ROUTINE.')
builder.addCardString('J136E221          020 P  0 050   62')
builder.addCardString('J136E222          020 $  0 010 * 40')
builder.addCardString('J136E223          071   34 050   60     STORE SIGN CHARACTER SHIFTED.')
builder.addCardString('J136E224     * 81 020   28 050 * 88')
builder.addCardString('J136E225          020 $  0 010 * 40')
builder.addCardString('J136E226          025 P  1 006 * 88     IF DECIMAL POINT GO TO * 88.')
builder.addCardString('J136E227          024 P  1 004 P  1')
builder.addCardString('J136E228          036   61 060   61')
builder.addCardString('J136E229     * 89 020 * 88 025   49')
builder.addCardString('J136E230          001 * 90 020 * 88')
builder.addCardString('J136E231          025 P  0 014 * 81')
builder.addCardString('J136E232     * 90 020 $  0 010 * 20     CONVERT BINARY SCALE FACTOR.')
builder.addCardString('J136E233          020 T  4 002 * 82')
builder.addCardString('J136E234          025   58 001 * 82     IF A SCALE FACTOR GO TO * 82.')
builder.addCardString('J136E235          120    0 004   61     FLOATING POINT DATA.')
builder.addCardString('J136E236          044 P  9 036 * 91')
builder.addCardString('J136E237     * 87 020   60 001 * 86')
builder.addCardString('J136E238          060   61 010 * 70     EXIT')
builder.addCardString('J136E239     * 86 061   61 010 * 70     EXIT')
builder.addCardString('J136E240     * 82 060 T  0 056 * 84     FIXED POINT DATA.')
builder.addCardString('J136E241          020 * 92 065 * 83')
builder.addCardString('J136E242     * 83 020   62 072 ----     ROUNDING.')
builder.addCardString('J136E243     * 84 024   61 076 ----     APPLY SCALE FACTOR.')
builder.addCardString('J136E244          044   62 010 * 87')
builder.addCardString('J136E245     * 88 000    0 020 ----')
builder.addCardString('J136E246          050   62 010 * 89')
builder.addCardString('J136E247     * 91 000,1000 000,0000     CONSTANT')
builder.addCardString('J136E248     * 92 020   62 072   40.     DUMMY')
//builder.addCardString('J136E249        . 010    0         .')

const pre = [];

const memory = j136e();
for (let i = 0; i < 250; i++) {
    pre.push(memory.get(i));
}

const cpu = new CPU(memory, builder.finalize());
cpu.go();
console.log(cpu.nextInstructionRegister);

const post = [];
for (let i = 1000; i < 1250; i++) {
    post.push(memory.get(i));
}

for (let i = 0; i < 250; i++) {
    const transformed = transform(post[i]!);
    const noTransformEq = pre[i] === post[i];
    const transformEq = pre[i] === transformed;
    if (!noTransformEq && !transformEq)
        console.log(`${i + 4}: ${noTransformEq || transformEq} (${pre[i]}, ${post[i]}, ${transformed})`)
}

function transform(word: bigint) {
    const leftOp = Number((word >> 33n) & 0o177n);
    const rightOp = Number((word >> 12n) & 0o177n);

    const leftAddress = Number((word >> 21n) & 0o7777n);
    const rightAddress = Number(word & 0o7777n);

    return _buildWord(
        leftOp,
        leftAddress > 1000 ? leftAddress - 1000 : leftAddress,
        rightOp,
        rightAddress > 1000 ? rightAddress - 1000 : rightAddress
    )

}

function _buildWord(leftCommand: OP, leftAddress: number, rightCommand: OP, rightAddress: number): bigint {
    let word = BigInt(rightAddress);
    word |= BigInt(rightCommand) << 12n;
    word |= BigInt(leftAddress) << 21n
    word |= BigInt(leftCommand) << 33n;
    return BigInt.asUintN(40, word);
}